[tool.poetry]
name = "connect-openapi-client"
version = "25.16"
description = "Connect Python OpenAPI Client"
authors = ["CloudBlue"]
license = "Apache-2.0"
packages = [
    { include = "connect" },
    { include = "cnct" }
]
readme = "./README.md"
documentation = "https://connect-openapi-client.readthedocs.io/en/latest/"
homepage = "https://connect.cloudblue.com"
repository = "https://github.com/cloudblue/connect-python-openapi-client"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries",
]
keywords = [
    "fulfillment",
    "api",
    "client",
    "openapi",
    "utility",
    "connect",
    "cloudblue",
]

[tool.poetry.dependencies]
python = ">=3.7,<4"
connect-markdown-renderer = "^2"
PyYAML = ">=5.3.1"
requests = ">=2.23"
inflect = ">=4.1"
httpx = ">=0.23"
asgiref = "^3.3.4"
responses = ">=0.14.0,<1"
pytest-httpx = ">=0.20"
importlib-metadata = { version = "^4.12.0", python = ">=3.7,<3.8" }

[tool.poetry.dev-dependencies]
pytest = ">=6.1.2,<8"
pytest-cov = ">=2.10.1,<5"
pytest-mock = "^3.3.1"
coverage = {extras = ["toml"], version = ">=5.3,<7"}
flake8 = ">=3.8,<6"
flake8-bugbear = ">=20,<23"
flake8-cognitive-complexity = "^0.1"
flake8-commas = "~2.0"
flake8-future-import = "~0.4"
flake8-import-order = "~0.18"
flake8-broken-line = ">=0.3,<0.7"
pytest-asyncio = "^0.15.1"
mock = { version = "^4.0.3", markers = "python_version < '3.8'" }
mkdocs = "^1.3.1"
mkdocs-material = "^8.5.3"
mkautodoc = "^0.2.0"

[tool.poetry.plugins.pytest11]
"pytest_connect_client" = "connect.client.testing.fixtures"


[build-system]
requires = ["poetry-core>=1.0.0", "setuptools>=42"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--cov=connect.client --cov-report=term-missing:skip-covered --cov-report=html --cov-report=xml"
log_cli = true
log_cli_level = "INFO"

[tool.coverage.run]
branch = true

[tool.coverage.report]
omit = [
    "*/migrations/*",
    "*/config/*",
    "*/settings/*",
    "*/manage.py",
    "*/wsgi.py",
    "*/urls.py",
    "connect/client/contrib/*"
]

exclude_lines = [
    "pragma: no cover",
    "def __str__",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
