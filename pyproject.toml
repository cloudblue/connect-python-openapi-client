[tool.poetry]
name = "connect-openapi-client"
version = "22.0.8"
description = "Connect Python OpenAPI Client"
authors = ["CloudBlue"]
license = "Apache-2.0"
packages = [
    { include = "connect" },
    { include = "cnct" }
]
readme = "./README.md"
documentation = "https://connect-openapi-client.readthedocs.io/en/latest/"
homepage = "https://connect.cloudblue.com"
repository = "https://github.com/cloudblue/connect-python-openapi-client"
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Environment :: Console",
    "Operating System :: OS Independent",
    "Intended Audience :: Developers",
    "Programming Language :: Python :: 3.6",
    "Programming Language :: Python :: 3.7",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Topic :: Utilities",
    "Topic :: Software Development :: Libraries",
]
keywords = [
    "fulfillment",
    "api",
    "client",
    "openapi",
    "utility",
    "connect",
    "cloudblue",
]

[tool.poetry.dependencies]
python = ">=3.6"
connect-markdown-renderer = "^1.0.0"
PyYAML = ">=5.3.1"
requests = ">=2.23"
inflect = ">=4.1"
httpx = "^0.18.1"
asgiref = "^3.3.4"

[tool.poetry.dev-dependencies]
pytest = "^6.1.2"
pytest-cov = "^2.10.1"
pytest-mock = "^3.3.1"
coverage = {extras = ["toml"], version = "^5.3"}
Sphinx = "^3.2.1"
sphinx-rtd-theme = "^0.5.0"
sphinx-copybutton = "^0.3.0"
setuptools-scm = "^4.1.2"
setuptools = "^50.3.2"
twine = "^3.2.0"
wheel = "^0.35.1"
responses = "^0.12.0"
flake8 = "~3.8"
flake8-bugbear = "~20"
flake8-cognitive-complexity = "^0.1"
flake8-commas = "~2.0"
flake8-future-import = "~0.4"
flake8-import-order = "~0.18"
flake8-broken-line = "~0.3"
sphinx-markdown-builder = "^0.5.4"
pytest-asyncio = "^0.15.1"
pytest-httpx = "^0.12.0"
mock = { version = "^4.0.3", markers = "python_version < '3.8'" }

[build-system]
requires = ["poetry-core>=1.0.0", "setuptools>=42"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
testpaths = "tests"
addopts = "--cov=connect.client --cov-report=term-missing:skip-covered --cov-report=html --cov-report=xml"

[tool.coverage.run]
branch = true

[tool.coverage.report]
omit = [
    "*/migrations/*",
    "*/config/*",
    "*/settings/*",
    "*/manage.py",
    "*/wsgi.py",
    "*/urls.py"
]

exclude_lines = [
    "pragma: no cover",
    "def __str__",
    "def __repr__",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]
